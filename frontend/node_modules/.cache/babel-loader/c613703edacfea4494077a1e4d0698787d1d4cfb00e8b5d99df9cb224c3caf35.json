{"ast":null,"code":"var _jsxFileName = \"/Users/jigaowang/Desktop/Learning materials/NUS Summer 25'/Pocket/PocketSphinxTest/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // ----- State -----\n  const [userId, setUserId] = useState(null);\n  const [audioUrl, setAudioUrl] = useState(null);\n  const [isListening, setIsListening] = useState(false);\n  const [isThinking, setIsThinking] = useState(false);\n  const [statusMsg, setStatusMsg] = useState(\"Loading...\");\n  const [transcribedText, setTranscribedText] = useState(\"\");\n  const [answerText, setAnswerText] = useState(\"\");\n  const [lastError, setLastError] = useState(\"\");\n  const [topicSet, setTopicSet] = useState(false);\n\n  // For microphone selection\n  const [devices, setDevices] = useState([]);\n  const [selectedDeviceId, setSelectedDeviceId] = useState(\"\");\n  const mediaRecorderRef = useRef(null);\n  const chunksRef = useRef([]);\n  const audioRef = useRef(null);\n  const canvasRef = useRef(null);\n  let audioContextRef = useRef(null);\n  let analyserRef = useRef(null);\n  let dataArrayRef = useRef(null);\n  let animationIdRef = useRef(null);\n  let sourceRef = useRef(null);\n\n  // ----- On mount, call /api/init -----\n  useEffect(() => {\n    (async function init() {\n      try {\n        const r = await fetch(\"http://localhost:5001/api/init\");\n        const d = await r.json();\n        setUserId(d.user_id);\n        setAudioUrl(\"http://localhost:5001\" + d.audio_path);\n        setStatusMsg(\"Please listen, then choose your mic and speak your topic.\");\n      } catch (err) {\n        console.error(\"Init error:\", err);\n        setLastError(\"Init error. See console.\");\n        setStatusMsg(\"Init failed.\");\n      }\n    })();\n\n    // enumerate audio devices\n    navigator.mediaDevices.enumerateDevices().then(devicesArr => {\n      const mics = devicesArr.filter(d => d.kind === \"audioinput\");\n      setDevices(mics);\n      if (mics.length > 0) {\n        setSelectedDeviceId(mics[0].deviceId);\n      }\n    }).catch(err => console.error(\"Could not get media devices:\", err));\n  }, []);\n\n  // ----- Play Audio (mp3) from server -----\n  const playAudio = src => {\n    if (!audioRef.current) return;\n    audioRef.current.src = src;\n    audioRef.current.play().catch(e => console.error(\"Audio play error:\", e));\n  };\n  useEffect(() => {\n    if (audioUrl) {\n      playAudio(audioUrl);\n    }\n  }, [audioUrl]);\n\n  // ----- Waveform Visualization -----\n  const drawWaveform = () => {\n    if (!analyserRef.current || !dataArrayRef.current) return;\n    const analyser = analyserRef.current;\n    const dataArray = dataArrayRef.current;\n    analyser.getByteTimeDomainData(dataArray);\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext(\"2d\");\n    const width = canvas.width;\n    const height = canvas.height;\n    ctx.fillStyle = \"#111\";\n    ctx.fillRect(0, 0, width, height);\n    ctx.lineWidth = 2;\n    ctx.strokeStyle = \"#0f0\";\n    ctx.beginPath();\n    let sliceWidth = width / dataArray.length;\n    let x = 0;\n    for (let i = 0; i < dataArray.length; i++) {\n      let v = dataArray[i] / 128.0;\n      let y = v * (height / 2);\n      if (i === 0) ctx.moveTo(x, y);else ctx.lineTo(x, y);\n      x += sliceWidth;\n    }\n    ctx.lineTo(width, height / 2);\n    ctx.stroke();\n    animationIdRef.current = requestAnimationFrame(drawWaveform);\n  };\n  const stopVisualization = () => {\n    if (animationIdRef.current) {\n      cancelAnimationFrame(animationIdRef.current);\n      animationIdRef.current = null;\n    }\n    const canvas = canvasRef.current;\n    if (canvas) {\n      const ctx = canvas.getContext(\"2d\");\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n    }\n  };\n\n  // ----- Start Listening -----\n  const startListening = async () => {\n    setIsListening(true);\n    setStatusMsg(\"Listening... speak now.\");\n    setLastError(\"\");\n    setAnswerText(\"\");\n    setTranscribedText(\"\");\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          deviceId: selectedDeviceId ? {\n            exact: selectedDeviceId\n          } : undefined\n        }\n      });\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      analyserRef.current = audioContextRef.current.createAnalyser();\n      analyserRef.current.fftSize = 2048;\n      dataArrayRef.current = new Uint8Array(analyserRef.current.fftSize);\n      sourceRef.current = audioContextRef.current.createMediaStreamSource(stream);\n      sourceRef.current.connect(analyserRef.current);\n      drawWaveform(); // start anim\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      chunksRef.current = [];\n      mediaRecorderRef.current.ondataavailable = e => {\n        if (e.data.size > 0) {\n          chunksRef.current.push(e.data);\n        }\n      };\n      mediaRecorderRef.current.onstop = handleStop;\n      mediaRecorderRef.current.start();\n    } catch (err) {\n      console.error(\"Mic error:\", err);\n      setLastError(\"Mic error. See console.\");\n      setIsListening(false);\n    }\n  };\n\n  // ----- Stop Listening -----\n  const stopListening = () => {\n    setIsListening(false);\n    setStatusMsg(\"Processing...\");\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state !== \"inactive\") {\n      mediaRecorderRef.current.stop();\n    }\n    if (sourceRef.current) {\n      sourceRef.current.disconnect();\n      sourceRef.current = null;\n    }\n    if (audioContextRef.current) {\n      audioContextRef.current.close();\n      audioContextRef.current = null;\n    }\n    stopVisualization();\n  };\n\n  // ----- Handle Stop => send to server -----\n  const handleStop = async () => {\n    setIsThinking(true);\n    setStatusMsg(\"Thinking...\");\n    const blob = new Blob(chunksRef.current, {\n      type: \"audio/webm\"\n    });\n    const formData = new FormData();\n    formData.append(\"user_id\", userId);\n    formData.append(\"audio\", blob, \"input.webm\");\n    formData.append(\"mode\", topicSet ? \"conversation\" : \"topic\");\n    try {\n      const resp = await fetch(\"http://localhost:5001/api/voice\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await resp.json();\n      setIsThinking(false);\n      if (!resp.ok) {\n        setLastError(data.error || \"STT / server error.\");\n        setStatusMsg(\"Error, please re-try.\");\n        return;\n      }\n      // success\n      setTranscribedText(data.transcribed_text || \"\");\n      setAnswerText(data.answer || \"\");\n      setStatusMsg(\"Got system response.\");\n      if (data.audio_path) {\n        setAudioUrl(\"http://localhost:5001\" + data.audio_path);\n      }\n      if (!topicSet) {\n        setTopicSet(true);\n      }\n    } catch (err) {\n      console.error(\"Voice error:\", err);\n      setLastError(\"Voice send error. See console.\");\n      setIsThinking(false);\n      setStatusMsg(\"Error. Try again?\");\n    }\n  };\n\n  // ----- Stop Convo -----\n  const handleStopConvo = async () => {\n    if (!userId) return;\n    setStatusMsg(\"Ending conversation...\");\n    try {\n      const r = await fetch(\"http://localhost:5001/api/stop\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user_id: userId\n        })\n      });\n      const d = await r.json();\n      if (d.error) {\n        setLastError(d.error);\n      } else {\n        setStatusMsg(\"Conversation ended.\");\n        if (d.audio_path) {\n          setAudioUrl(\"http://localhost:5001\" + d.audio_path);\n        }\n      }\n    } catch (err) {\n      console.error(\"Stop error:\", err);\n      setLastError(\"Stop convo error. See console.\");\n    }\n  };\n\n  // ----- Render -----\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: \"#0f9\"\n      },\n      children: \"Deep Interactive System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontStyle: \"italic\"\n      },\n      children: statusMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), lastError && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: [\"Error: \", lastError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.card,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            marginRight: 8\n          },\n          children: \"Select Microphone:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedDeviceId,\n          onChange: e => setSelectedDeviceId(e.target.value),\n          children: devices.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: d.deviceId,\n            children: d.label || `Mic ${d.deviceId}`\n          }, d.deviceId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 10\n        },\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          width: 300,\n          height: 60,\n          style: {\n            background: \"#222\",\n            border: \"1px solid #555\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Transcribed: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: transcribedText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Answer: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: answerText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          gap: 8\n        },\n        children: [!isListening ? /*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.btn,\n          onClick: startListening,\n          children: topicSet ? \"Speak (Conversation)\" : \"Speak (Topic)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.btn,\n          onClick: stopListening,\n          children: \"Stop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.btnStop,\n          onClick: handleStopConvo,\n          children: \"Stop Conversation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginTop: 10\n        },\n        children: [\"Thinking: \", isThinking ? \"Yes\" : \"No\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 5\n  }, this);\n}\n\n// A few inline styles for a better design\n_s(App, \"nzFFXOq2YIuST0sgBzdyQVFJWKg=\");\n_c = App;\nconst styles = {\n  container: {\n    background: \"#333\",\n    color: \"#fff\",\n    minHeight: \"100vh\",\n    padding: \"20px\",\n    fontFamily: \"sans-serif\"\n  },\n  card: {\n    background: \"#444\",\n    padding: \"20px\",\n    borderRadius: \"8px\",\n    maxWidth: \"400px\"\n  },\n  btn: {\n    background: \"#27ae60\",\n    border: \"none\",\n    color: \"#fff\",\n    borderRadius: \"4px\",\n    padding: \"10px 16px\",\n    cursor: \"pointer\"\n  },\n  btnStop: {\n    background: \"#c0392b\",\n    border: \"none\",\n    color: \"#fff\",\n    borderRadius: \"4px\",\n    padding: \"10px 16px\",\n    cursor: \"pointer\"\n  }\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","App","_s","userId","setUserId","audioUrl","setAudioUrl","isListening","setIsListening","isThinking","setIsThinking","statusMsg","setStatusMsg","transcribedText","setTranscribedText","answerText","setAnswerText","lastError","setLastError","topicSet","setTopicSet","devices","setDevices","selectedDeviceId","setSelectedDeviceId","mediaRecorderRef","chunksRef","audioRef","canvasRef","audioContextRef","analyserRef","dataArrayRef","animationIdRef","sourceRef","init","r","fetch","d","json","user_id","audio_path","err","console","error","navigator","mediaDevices","enumerateDevices","then","devicesArr","mics","filter","kind","length","deviceId","catch","playAudio","src","current","play","e","drawWaveform","analyser","dataArray","getByteTimeDomainData","canvas","ctx","getContext","width","height","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","sliceWidth","x","i","v","y","moveTo","lineTo","stroke","requestAnimationFrame","stopVisualization","cancelAnimationFrame","clearRect","startListening","stream","getUserMedia","audio","exact","undefined","window","AudioContext","webkitAudioContext","createAnalyser","fftSize","Uint8Array","createMediaStreamSource","connect","MediaRecorder","ondataavailable","data","size","push","onstop","handleStop","start","stopListening","state","stop","disconnect","close","blob","Blob","type","formData","FormData","append","resp","method","body","ok","transcribed_text","answer","handleStopConvo","headers","JSON","stringify","style","styles","container","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","color","fontStyle","card","marginBottom","marginRight","value","onChange","target","map","label","background","border","display","gap","btn","onClick","btnStop","marginTop","_c","minHeight","padding","fontFamily","borderRadius","maxWidth","cursor","$RefreshReg$"],"sources":["/Users/jigaowang/Desktop/Learning materials/NUS Summer 25'/Pocket/PocketSphinxTest/frontend/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect, useRef } from \"react\";\n\nfunction App() {\n  // ----- State -----\n  const [userId, setUserId] = useState(null);\n  const [audioUrl, setAudioUrl] = useState(null);\n  const [isListening, setIsListening] = useState(false);\n  const [isThinking, setIsThinking] = useState(false);\n  const [statusMsg, setStatusMsg] = useState(\"Loading...\");\n  const [transcribedText, setTranscribedText] = useState(\"\");\n  const [answerText, setAnswerText] = useState(\"\");\n  const [lastError, setLastError] = useState(\"\");\n  const [topicSet, setTopicSet] = useState(false);\n\n  // For microphone selection\n  const [devices, setDevices] = useState([]);\n  const [selectedDeviceId, setSelectedDeviceId] = useState(\"\");\n\n  const mediaRecorderRef = useRef(null);\n  const chunksRef = useRef([]);\n  const audioRef = useRef(null);\n  const canvasRef = useRef(null);\n  let audioContextRef = useRef(null);\n  let analyserRef = useRef(null);\n  let dataArrayRef = useRef(null);\n  let animationIdRef = useRef(null);\n  let sourceRef = useRef(null);\n\n  // ----- On mount, call /api/init -----\n  useEffect(() => {\n    (async function init() {\n      try {\n        const r = await fetch(\"http://localhost:5001/api/init\");\n        const d = await r.json();\n        setUserId(d.user_id);\n        setAudioUrl(\"http://localhost:5001\" + d.audio_path);\n        setStatusMsg(\"Please listen, then choose your mic and speak your topic.\");\n      } catch (err) {\n        console.error(\"Init error:\", err);\n        setLastError(\"Init error. See console.\");\n        setStatusMsg(\"Init failed.\");\n      }\n    })();\n\n    // enumerate audio devices\n    navigator.mediaDevices\n      .enumerateDevices()\n      .then((devicesArr) => {\n        const mics = devicesArr.filter((d) => d.kind === \"audioinput\");\n        setDevices(mics);\n        if (mics.length > 0) {\n          setSelectedDeviceId(mics[0].deviceId);\n        }\n      })\n      .catch((err) => console.error(\"Could not get media devices:\", err));\n  }, []);\n\n  // ----- Play Audio (mp3) from server -----\n  const playAudio = (src) => {\n    if (!audioRef.current) return;\n    audioRef.current.src = src;\n    audioRef.current\n      .play()\n      .catch((e) => console.error(\"Audio play error:\", e));\n  };\n\n  useEffect(() => {\n    if (audioUrl) {\n      playAudio(audioUrl);\n    }\n  }, [audioUrl]);\n\n  // ----- Waveform Visualization -----\n  const drawWaveform = () => {\n    if (!analyserRef.current || !dataArrayRef.current) return;\n    const analyser = analyserRef.current;\n    const dataArray = dataArrayRef.current;\n    analyser.getByteTimeDomainData(dataArray);\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext(\"2d\");\n    const width = canvas.width;\n    const height = canvas.height;\n\n    ctx.fillStyle = \"#111\";\n    ctx.fillRect(0, 0, width, height);\n\n    ctx.lineWidth = 2;\n    ctx.strokeStyle = \"#0f0\";\n    ctx.beginPath();\n\n    let sliceWidth = width / dataArray.length;\n    let x = 0;\n    for (let i=0; i < dataArray.length; i++){\n      let v = dataArray[i] / 128.0;\n      let y = v * (height/2);\n      if (i === 0) ctx.moveTo(x,y);\n      else ctx.lineTo(x,y);\n      x += sliceWidth;\n    }\n    ctx.lineTo(width, height/2);\n    ctx.stroke();\n\n    animationIdRef.current = requestAnimationFrame(drawWaveform);\n  };\n\n  const stopVisualization = () => {\n    if (animationIdRef.current) {\n      cancelAnimationFrame(animationIdRef.current);\n      animationIdRef.current = null;\n    }\n    const canvas = canvasRef.current;\n    if (canvas) {\n      const ctx = canvas.getContext(\"2d\");\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n    }\n  };\n\n  // ----- Start Listening -----\n  const startListening = async () => {\n    setIsListening(true);\n    setStatusMsg(\"Listening... speak now.\");\n    setLastError(\"\");\n    setAnswerText(\"\");\n    setTranscribedText(\"\");\n\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          deviceId: selectedDeviceId ? { exact: selectedDeviceId } : undefined,\n        },\n      });\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      analyserRef.current = audioContextRef.current.createAnalyser();\n      analyserRef.current.fftSize = 2048;\n      dataArrayRef.current = new Uint8Array(analyserRef.current.fftSize);\n\n      sourceRef.current = audioContextRef.current.createMediaStreamSource(stream);\n      sourceRef.current.connect(analyserRef.current);\n\n      drawWaveform(); // start anim\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      chunksRef.current = [];\n\n      mediaRecorderRef.current.ondataavailable = (e) => {\n        if (e.data.size > 0) {\n          chunksRef.current.push(e.data);\n        }\n      };\n      mediaRecorderRef.current.onstop = handleStop;\n      mediaRecorderRef.current.start();\n    } catch (err) {\n      console.error(\"Mic error:\", err);\n      setLastError(\"Mic error. See console.\");\n      setIsListening(false);\n    }\n  };\n\n  // ----- Stop Listening -----\n  const stopListening = () => {\n    setIsListening(false);\n    setStatusMsg(\"Processing...\");\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state !== \"inactive\") {\n      mediaRecorderRef.current.stop();\n    }\n    if (sourceRef.current) {\n      sourceRef.current.disconnect();\n      sourceRef.current = null;\n    }\n    if (audioContextRef.current) {\n      audioContextRef.current.close();\n      audioContextRef.current = null;\n    }\n    stopVisualization();\n  };\n\n  // ----- Handle Stop => send to server -----\n  const handleStop = async () => {\n    setIsThinking(true);\n    setStatusMsg(\"Thinking...\");\n    const blob = new Blob(chunksRef.current, { type: \"audio/webm\" });\n\n    const formData = new FormData();\n    formData.append(\"user_id\", userId);\n    formData.append(\"audio\", blob, \"input.webm\");\n    formData.append(\"mode\", topicSet ? \"conversation\" : \"topic\");\n\n    try {\n      const resp = await fetch(\"http://localhost:5001/api/voice\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await resp.json();\n      setIsThinking(false);\n\n      if (!resp.ok) {\n        setLastError(data.error || \"STT / server error.\");\n        setStatusMsg(\"Error, please re-try.\");\n        return;\n      }\n      // success\n      setTranscribedText(data.transcribed_text || \"\");\n      setAnswerText(data.answer || \"\");\n      setStatusMsg(\"Got system response.\");\n      if (data.audio_path) {\n        setAudioUrl(\"http://localhost:5001\" + data.audio_path);\n      }\n      if (!topicSet) {\n        setTopicSet(true);\n      }\n    } catch (err) {\n      console.error(\"Voice error:\", err);\n      setLastError(\"Voice send error. See console.\");\n      setIsThinking(false);\n      setStatusMsg(\"Error. Try again?\");\n    }\n  };\n\n  // ----- Stop Convo -----\n  const handleStopConvo = async () => {\n    if (!userId) return;\n    setStatusMsg(\"Ending conversation...\");\n    try {\n      const r = await fetch(\"http://localhost:5001/api/stop\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ user_id: userId })\n      });\n      const d = await r.json();\n      if (d.error) {\n        setLastError(d.error);\n      } else {\n        setStatusMsg(\"Conversation ended.\");\n        if (d.audio_path) {\n          setAudioUrl(\"http://localhost:5001\" + d.audio_path);\n        }\n      }\n    } catch (err) {\n      console.error(\"Stop error:\", err);\n      setLastError(\"Stop convo error. See console.\");\n    }\n  };\n\n  // ----- Render -----\n  return (\n    <div style={styles.container}>\n      <audio ref={audioRef} />\n      <h1 style={{ color:\"#0f9\"}}>Deep Interactive System</h1>\n      <p style={{ fontStyle:\"italic\" }}>{statusMsg}</p>\n      {lastError && <p style={{ color:\"red\"}}>Error: {lastError}</p>}\n\n      <div style={styles.card}>\n        <div style={{ marginBottom:10 }}>\n          <label style={{ marginRight:8 }}>Select Microphone:</label>\n          <select\n            value={selectedDeviceId}\n            onChange={(e) => setSelectedDeviceId(e.target.value)}\n          >\n            {devices.map((d) => (\n              <option key={d.deviceId} value={d.deviceId}>\n                {d.label || `Mic ${d.deviceId}`}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div style={{ marginBottom:10 }}>\n          <canvas ref={canvasRef} width={300} height={60} style={{ background:\"#222\", border:\"1px solid #555\" }} />\n        </div>\n\n        <div style={{ marginBottom:10 }}>\n          <p>Transcribed: <strong>{transcribedText}</strong></p>\n          <p>Answer: <strong>{answerText}</strong></p>\n        </div>\n\n        <div style={{ display:\"flex\", gap:8 }}>\n          {!isListening ? (\n            <button style={styles.btn} onClick={startListening}>\n              {topicSet ? \"Speak (Conversation)\" : \"Speak (Topic)\"}\n            </button>\n          ) : (\n            <button style={styles.btn} onClick={stopListening}>Stop</button>\n          )}\n          <button style={styles.btnStop} onClick={handleStopConvo}>Stop Conversation</button>\n        </div>\n        <p style={{ marginTop:10 }}>Thinking: {isThinking ? \"Yes\" : \"No\"}</p>\n      </div>\n    </div>\n  );\n}\n\n// A few inline styles for a better design\nconst styles = {\n  container: {\n    background:\"#333\",\n    color:\"#fff\",\n    minHeight:\"100vh\",\n    padding:\"20px\",\n    fontFamily:\"sans-serif\"\n  },\n  card: {\n    background:\"#444\",\n    padding:\"20px\",\n    borderRadius:\"8px\",\n    maxWidth:\"400px\"\n  },\n  btn: {\n    background:\"#27ae60\",\n    border:\"none\",\n    color:\"#fff\",\n    borderRadius:\"4px\",\n    padding:\"10px 16px\",\n    cursor:\"pointer\"\n  },\n  btnStop: {\n    background:\"#c0392b\",\n    border:\"none\",\n    color:\"#fff\",\n    borderRadius:\"4px\",\n    padding:\"10px 16px\",\n    cursor:\"pointer\"\n  }\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}